package com.kh.chap01_Abstraction.run;

import com.kh.chap01_Abstraction.model.vo.*;
public class run {
	/*
	 * 1. 현실에서의 객체 : 사전적 의미로 독립적으로 존재하는 어떤 것들
	 *  (무형, 유형, 사물, 개념...)
	 * 2. 자바에서의 객체 : new 연산자를 통해 메모리 영역에 생성된 것
	 * 3. 객체지향프로그래밍(OOP) : 현실 세계의 어떠한 객체들간의 상호작용을
	 * 프로그래밍을 통해 가상 세계(코드)로 구현하는 과정
	 * 4. 객체를 만들기 위해서는? 추상화, 캡슐화 과정을 통해 클래스를 만들어야 함
	 * 클래스 : 객체의 특성(속성, 기능)에 대해 정의한 것으로 마치 제품의 설계
	 * 
	 * 5. 추상화 과정
	 *  1) 내가 구현하고자 하는 프로그램에서 필요한 객체를 생각해 볼것
	 *  2) 그 객체들이 가지는 공통적인 속성, 기능 모두 추출
	 *  3) 내가 구현하고자 하는 프로그램의 "목적"에 맞춰 불필요한 속성, 기능 지우기
	 *  
	 *  ex1) 학생 관리 프로그램을 만드려면
	 *   1) 학생 객체(김영희, 김철수, ...)
	 *   2) 공통 속성 및 기능(이름, 나이, 주소, 전화번호, 학년, 반, 점수, 먹는다, 화장실을 간다)
	 *   3) 학생 "인적사항"을 관리하는 프로그램 : 이름, 나이, 주소, 전화번호, 학년, 반
	 *      학생 건강 관리 프로그램: 이름, 학년, 반, 키, 몸무게, 달리기 속도, 먹는다, 화장실 간다
	 *    3번까지의 과정을 마치고 최종적으로 선정 된 속성에 대해 어떠한 자료형을 부여할 지 결정
	 *   ex) 이름 -> String name;
	 *       나이 -> int age;
	 *       키 -> double height;
	 */
	public static void main(String[] args){
		//만약에 변수만을 가지고 프로그래밍 한다면?
		String name1 = "장범석";
		int kor1 = 100;
		int math1 = 99;
		int eng1 = 90;
		// 수백명의 학생이 있다면 변수의 개수가 너무 늘어나 관리가 어려움
		// -> 따라서 클래스(를)을 만들어 객체들을 찍어내자!
		
		// 1. 클래스(를) 만들고 자바에서의 객체 형태로 만들기 위해서는
		// new 연산자를 통해 heap영역에 객체를 생성해야 함
		Student lim = new Student();
		lim.name = "우별림";
		lim.kor = 100;
		lim.math = 99;
		lim.eng = 98;
		// -> 직접 접근을 통해 값 초기화
		
		System.out.println(lim.name + "님의 국어점수는 " + lim.kor + "이고, 수학점수는 " 
				+ lim.math + "이며, 영어점수는 " + lim.eng + "입니다.");
		// 우별림 객체를 관리하기 위해서는 lim이라는 레퍼런스 변수만 알면된다.
		
		Student dong = new Student();
		dong.name = "홍길동";
		dong.kor = 30;
		dong.math = 40;
		dong.eng = 50;
		
		System.out.println(dong.name + "님의 국어점수는 " + dong.kor + "이고, 수학점수는 " 
				+ dong.math + "이며, 영어점수는 " + dong.eng + "입니다." );
		
		// 여기서 발생할 수 있는 문제
		// 이런 식으로 직접 접근해서 작업하게 되면 외부에서도 직접 접근을 통해 값 변경 가능
		// 즉, public으로 작업하게 되면 외부에서 직접 접근하여 값을 변질시키거나
		// 맘대로 조회할 수 있음
		// -> 캡슐화 작업이 필요함
		
	}
}
